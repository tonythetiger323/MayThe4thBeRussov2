"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dockerPlugin = require("snyk-docker-plugin");
var npmPlugin = require("./npm");
var rubygemsPlugin = require("./rubygems");
var mvnPlugin = require("snyk-mvn-plugin");
var gradlePlugin = require("snyk-gradle-plugin");
var sbtPlugin = require("snyk-sbt-plugin");
var yarnPlugin = require("./yarn");
var pythonPlugin = require("snyk-python-plugin");
var goPlugin = require("snyk-go-plugin");
var nugetPlugin = require("snyk-nuget-plugin");
var phpPlugin = require("snyk-php-plugin");
function loadPlugin(packageManager, options) {
    if (options === void 0) { options = {}; }
    if (options.docker) {
        return dockerPlugin;
    }
    switch (packageManager) {
        case 'npm': {
            return npmPlugin;
        }
        case 'rubygems': {
            return rubygemsPlugin;
        }
        case 'maven': {
            return mvnPlugin;
        }
        case 'gradle': {
            return gradlePlugin;
        }
        case 'sbt': {
            return sbtPlugin;
        }
        case 'yarn': {
            return yarnPlugin;
        }
        case 'pip': {
            return pythonPlugin;
        }
        case 'golangdep':
        case 'govendor': {
            return goPlugin;
        }
        case 'nuget': {
            return nugetPlugin;
        }
        case 'paket': {
            return nugetPlugin;
        }
        case 'composer': {
            return phpPlugin;
        }
        default: {
            throw new Error("Unsupported package manager: " + packageManager);
        }
    }
}
exports.loadPlugin = loadPlugin;
//# sourceMappingURL=index.js.map